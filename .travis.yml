language: android
android:
 components:
  - build-tools-23.0.2
  - android-22

addons:
 apt:
  packages:
   - sshpass

before_install:
 - echo "install nodejs"
 - nvm install 6
 - npm install yarn -g
 - node --version
 - npm --version
 - nvm --version

install:
 - yarn install
 - yarn upgrade docx-template docx4js qili-app --latest

script:
 - yarn run build.$BUILD_MODE
 - yarn run cordova
 - yarn run tv

after_success:
 - mv cordova/platforms/android/build/outputs/apk/android-debug.apk ./app.apk
 - travis_wait sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ./app.apk "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/$APP_NAME"

 - mv tv/platforms/android/build/outputs/apk/android-debug.apk ./tv.apk
 - travis_wait sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ./tv.apk "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/$APP_NAME"
 
 - rm dist/config.xml
 - rm dist/tv.xml
 - rm dist/cordova.html

 - npm run build.debug
 - node -p "require('./package.json').version" > dist/app.apk.version
 - mv dist $APP_NAME
 - tar cvfz $APP_NAME.tgz $APP_NAME
 - ls $APP_NAME -l
 - travis_wait sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $APP_NAME.tgz "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH"
 - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPLOY_USER@$DEPLOY_HOST "tar xvfz $DEPLOY_PATH/$APP_NAME.tgz -C $DEPLOY_PATH && rm $DEPLOY_PATH/$APP_NAME.tgz"
